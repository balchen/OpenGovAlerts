// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenGovAlerts.Models;

namespace OpenGovAlerts.Migrations
{
    [DbContext(typeof(AlertsDbContext))]
    [Migration("20211003162923_CreatedByIdAndOtherChanges")]
    partial class CreatedByIdAndOtherChanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OpenGov.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MeetingId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("OpenGov.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeetingId")
                        .HasColumnType("int");

                    b.Property<int?>("SearchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeFound")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeNotified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.HasIndex("SearchId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("OpenGov.Models.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgendaItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoardId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeetingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("OpenGov.Models.Observer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Emails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SmtpPort")
                        .HasColumnType("int");

                    b.Property<string>("SmtpSender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SmtpUseSsl")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Observers");
                });

            modelBuilder.Entity("OpenGov.Models.ObserverSearch", b =>
                {
                    b.Property<int>("ObserverId")
                        .HasColumnType("int");

                    b.Property<int>("SearchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Activated")
                        .HasColumnType("datetime2");

                    b.HasKey("ObserverId", "SearchId");

                    b.HasIndex("SearchId");

                    b.ToTable("ObserverSearches");
                });

            modelBuilder.Entity("OpenGov.Models.Search", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phrase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Searches");
                });

            modelBuilder.Entity("OpenGov.Models.SearchSource", b =>
                {
                    b.Property<int>("SearchId")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.HasKey("SearchId", "SourceId");

                    b.HasIndex("SourceId");

                    b.ToTable("SearchSources");
                });

            modelBuilder.Entity("OpenGov.Models.SeenMeeting", b =>
                {
                    b.Property<int>("SearchId")
                        .HasColumnType("int");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSeen")
                        .HasColumnType("datetime2");

                    b.HasKey("SearchId", "MeetingId");

                    b.HasIndex("MeetingId");

                    b.ToTable("SeenMeetings");
                });

            modelBuilder.Entity("OpenGov.Models.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("OpenGov.Models.StorageConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ObserverId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ObserverId");

                    b.ToTable("StorageConfig");
                });

            modelBuilder.Entity("OpenGov.Models.TaskManagerConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ObserverId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ObserverId");

                    b.ToTable("TaskManagerConfig");
                });

            modelBuilder.Entity("OpenGov.Models.Document", b =>
                {
                    b.HasOne("OpenGov.Models.Meeting", "Meeting")
                        .WithMany("Documents")
                        .HasForeignKey("MeetingId");

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("OpenGov.Models.Match", b =>
                {
                    b.HasOne("OpenGov.Models.Meeting", "Meeting")
                        .WithMany("Matches")
                        .HasForeignKey("MeetingId");

                    b.HasOne("OpenGov.Models.Search", "Search")
                        .WithMany("Matches")
                        .HasForeignKey("SearchId");

                    b.Navigation("Meeting");

                    b.Navigation("Search");
                });

            modelBuilder.Entity("OpenGov.Models.Meeting", b =>
                {
                    b.HasOne("OpenGov.Models.Source", "Source")
                        .WithMany("Meetings")
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("OpenGov.Models.ObserverSearch", b =>
                {
                    b.HasOne("OpenGov.Models.Observer", "Observer")
                        .WithMany("SubscribedSearches")
                        .HasForeignKey("ObserverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenGov.Models.Search", "Search")
                        .WithMany("Subscribers")
                        .HasForeignKey("SearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Observer");

                    b.Navigation("Search");
                });

            modelBuilder.Entity("OpenGov.Models.Search", b =>
                {
                    b.HasOne("OpenGov.Models.Observer", "CreatedBy")
                        .WithMany("CreatedSearches")
                        .HasForeignKey("CreatedById");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("OpenGov.Models.SearchSource", b =>
                {
                    b.HasOne("OpenGov.Models.Search", "Search")
                        .WithMany("Sources")
                        .HasForeignKey("SearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenGov.Models.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Search");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("OpenGov.Models.SeenMeeting", b =>
                {
                    b.HasOne("OpenGov.Models.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenGov.Models.Search", "Search")
                        .WithMany("SeenMeetings")
                        .HasForeignKey("SearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Search");
                });

            modelBuilder.Entity("OpenGov.Models.StorageConfig", b =>
                {
                    b.HasOne("OpenGov.Models.Observer", null)
                        .WithMany("Storage")
                        .HasForeignKey("ObserverId");
                });

            modelBuilder.Entity("OpenGov.Models.TaskManagerConfig", b =>
                {
                    b.HasOne("OpenGov.Models.Observer", null)
                        .WithMany("TaskManager")
                        .HasForeignKey("ObserverId");
                });

            modelBuilder.Entity("OpenGov.Models.Meeting", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Matches");
                });

            modelBuilder.Entity("OpenGov.Models.Observer", b =>
                {
                    b.Navigation("CreatedSearches");

                    b.Navigation("Storage");

                    b.Navigation("SubscribedSearches");

                    b.Navigation("TaskManager");
                });

            modelBuilder.Entity("OpenGov.Models.Search", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("SeenMeetings");

                    b.Navigation("Sources");

                    b.Navigation("Subscribers");
                });

            modelBuilder.Entity("OpenGov.Models.Source", b =>
                {
                    b.Navigation("Meetings");
                });
#pragma warning restore 612, 618
        }
    }
}
